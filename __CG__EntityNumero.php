<?php

namespace DoctrineProxies\__CG__\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Numero extends \Entity\Numero implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Entity\\Numero' . "\0" . 'id', '' . "\0" . 'Entity\\Numero' . "\0" . 'id_sorteo', '' . "\0" . 'Entity\\Numero' . "\0" . 'numero', '' . "\0" . 'Entity\\Numero' . "\0" . 'dueño', '' . "\0" . 'Entity\\Numero' . "\0" . 'responsable', '' . "\0" . 'Entity\\Numero' . "\0" . 'estado_dueño', '' . "\0" . 'Entity\\Numero' . "\0" . 'estado_responsable'];
        }

        return ['__isInitialized__', '' . "\0" . 'Entity\\Numero' . "\0" . 'id', '' . "\0" . 'Entity\\Numero' . "\0" . 'id_sorteo', '' . "\0" . 'Entity\\Numero' . "\0" . 'numero', '' . "\0" . 'Entity\\Numero' . "\0" . 'dueño', '' . "\0" . 'Entity\\Numero' . "\0" . 'responsable', '' . "\0" . 'Entity\\Numero' . "\0" . 'estado_dueño', '' . "\0" . 'Entity\\Numero' . "\0" . 'estado_responsable'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Numero $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumero($numero)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumero', [$numero]);

        return parent::setNumero($numero);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumero()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumero', []);

        return parent::getNumero();
    }

    /**
     * {@inheritDoc}
     */
    public function setDueño($dueño)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDueño', [$dueño]);

        return parent::setDueño($dueño);
    }

    /**
     * {@inheritDoc}
     */
    public function getDueño()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDueño', []);

        return parent::getDueño();
    }

    /**
     * {@inheritDoc}
     */
    public function setEstado($estado)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEstado', [$estado]);

        return parent::setEstado($estado);
    }

    /**
     * {@inheritDoc}
     */
    public function getEstado()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEstado', []);

        return parent::getEstado();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdSorteo(\Entity\Sorteo $idSorteo = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdSorteo', [$idSorteo]);

        return parent::setIdSorteo($idSorteo);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdSorteo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdSorteo', []);

        return parent::getIdSorteo();
    }

    /**
     * {@inheritDoc}
     */
    public function setResponsable($responsable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResponsable', [$responsable]);

        return parent::setResponsable($responsable);
    }

    /**
     * {@inheritDoc}
     */
    public function getResponsable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResponsable', []);

        return parent::getResponsable();
    }

    /**
     * {@inheritDoc}
     */
    public function setEstadoDueño($estadoDueño)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEstadoDueño', [$estadoDueño]);

        return parent::setEstadoDueño($estadoDueño);
    }

    /**
     * {@inheritDoc}
     */
    public function getEstadoDueño()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEstadoDueño', []);

        return parent::getEstadoDueño();
    }

    /**
     * {@inheritDoc}
     */
    public function setEstadoResponsable($estadoResponsable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEstadoResponsable', [$estadoResponsable]);

        return parent::setEstadoResponsable($estadoResponsable);
    }

    /**
     * {@inheritDoc}
     */
    public function getEstadoResponsable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEstadoResponsable', []);

        return parent::getEstadoResponsable();
    }

    /**
     * {@inheritDoc}
     */
    public function tieneResponsable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'tieneResponsable', []);

        return parent::tieneResponsable();
    }

}
